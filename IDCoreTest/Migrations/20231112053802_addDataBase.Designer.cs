// <auto-generated />
using System;
using IDCoreTest.ContextDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDCoreTest.Migrations
{
    [DbContext(typeof(AppContextDB))]
    [Migration("20231112053802_addDataBase")]
    partial class addDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_100_CI_AI")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDCoreTest.Models.HtblCustomer", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldAccessChannel")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAccessChannel");

                    b.Property<long>("FldActivityId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldActivityID");

                    b.Property<string>("FldAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldAddress");

                    b.Property<long?>("FldAltRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAltRouteId");

                    b.Property<long>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldComments");

                    b.Property<string>("FldContactPerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldContactPerson");

                    b.Property<DateTime>("FldCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate");

                    b.Property<int>("FldCreditCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldCreditCategory")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("FldCreditDays")
                        .HasColumnType("int")
                        .HasColumnName("fldCreditDays");

                    b.Property<long>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<string>("FldCustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldCustomerCode");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<double>("FldDefaultDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDefaultDiscount");

                    b.Property<string>("FldEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldEmail");

                    b.Property<string>("FldFax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldFax");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<DateTime?>("FldLicenseExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLicenseExpiryDate");

                    b.Property<string>("FldLicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLicenseNumber");

                    b.Property<double?>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<string>("FldMobilePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobilePhone");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldNationalNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldNationalNumber");

                    b.Property<string>("FldOtherTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldOtherTelephone");

                    b.Property<string>("FldPlaceOfSupply")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply");

                    b.Property<string>("FldPobox")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("fldPOBox");

                    b.Property<long>("FldPriceBookId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<double>("FldServiceTime")
                        .HasColumnType("float")
                        .HasColumnName("fldServiceTime");

                    b.Property<string>("FldTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTelephone");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<string>("FldTrn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("fldTRN");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<string>("FldVisitDay")
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("fldVisitDay")
                        .IsFixedLength();

                    b.Property<string>("FldVisitWeek")
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .HasColumnName("fldVisitWeek")
                        .IsFixedLength();

                    b.Property<string>("FldWebsite")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldWebsite");

                    b.Property<long>("FldWorkingAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldWorkingAreaID");

                    b.Property<string>("FldWorkingHours")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldWorkingHours");

                    b.HasKey("FldId");

                    b.ToTable("HtblCustomer");
                });

            modelBuilder.Entity("IDCoreTest.Models.HtblInvoice", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldComments")
                        .HasColumnType("text")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<double>("FldCustomerBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCustomerBalance");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<long>("FldCustomerVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    b.Property<long?>("FldDeletedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDeletedBy");

                    b.Property<int>("FldDeliveryTerms")
                        .HasColumnType("int")
                        .HasColumnName("fldDeliveryTerms");

                    b.Property<double?>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<long?>("FldDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDriverId");

                    b.Property<DateTime?>("FldDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDueDate");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("FldGrandTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldGrandTotal");

                    b.Property<long?>("FldHelperId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldHelperId");

                    b.Property<string>("FldInvoiceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldInvoiceCode");

                    b.Property<int?>("FldInvoiceCollectionStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldInvoiceCollectionStatus");

                    b.Property<DateTime?>("FldInvoiceCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldInvoiceCreateDate");

                    b.Property<DateTime?>("FldInvoiceDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldInvoiceDateTime");

                    b.Property<long?>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<int?>("FldInvoiceType")
                        .HasColumnType("int")
                        .HasColumnName("fldInvoiceType");

                    b.Property<string>("FldJurisdiction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction");

                    b.Property<string>("FldLponumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLPONumber");

                    b.Property<double?>("FldNetTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldNetTotal");

                    b.Property<int>("FldPayTerms")
                        .HasColumnType("int")
                        .HasColumnName("fldPayTerms");

                    b.Property<string>("FldPlaceOfSupply")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply");

                    b.Property<long?>("FldPriceBookId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId");

                    b.Property<string>("FldReceiverMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldReceiverMobile");

                    b.Property<string>("FldReceiverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldReceiverName");

                    b.Property<long?>("FldRefOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRefOrderID");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<long?>("FldSalesInvoiceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesInvoiceNumber");

                    b.Property<long>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<int?>("FldSequence")
                        .HasColumnType("int")
                        .HasColumnName("fldSequence");

                    b.Property<long?>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockId");

                    b.Property<double?>("FldTotalCollection")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalCollection");

                    b.Property<double?>("FldTotalSales")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalSales");

                    b.Property<double?>("FldVatvalue")
                        .HasColumnType("float")
                        .HasColumnName("fldVATValue");

                    b.HasKey("FldId");

                    b.ToTable("HtblInvoice");
                });

            modelBuilder.Entity("IDCoreTest.Models.HtblInvoiceLineItem", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<double?>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<long>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<DateTime?>("FldItemCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldItemCreateDate");

                    b.Property<double?>("FldOfferQty")
                        .HasColumnType("float")
                        .HasColumnName("fldOfferQty");

                    b.Property<double>("FldPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldPrice");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldProductUnit");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double?>("FldQty")
                        .HasColumnType("float")
                        .HasColumnName("fldQty");

                    b.Property<double?>("FldReturnQty")
                        .HasColumnType("float")
                        .HasColumnName("fldReturnQty");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<string>("FldTaxCategoryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldTaxCategoryCode")
                        .HasDefaultValueSql("('SR')");

                    b.Property<double?>("FldValue")
                        .HasColumnType("float")
                        .HasColumnName("fldValue");

                    b.Property<long?>("FldlnvoiceLineItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldlnvoiceLineItemID");

                    b.HasKey("FldId");

                    b.ToTable("HtblInvoiceLineItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.HtblPayment", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double?>("FldAmount")
                        .HasColumnType("float")
                        .HasColumnName("fldAmount");

                    b.Property<DateTime?>("FldChequeDate")
                        .HasColumnType("date")
                        .HasColumnName("fldChequeDate");

                    b.Property<string>("FldChequeNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fldChequeNo");

                    b.Property<string>("FldChequePhotoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("fldChequePhotoUrl");

                    b.Property<DateTime?>("FldCollectionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldCollectionDate");

                    b.Property<int?>("FldCollectionStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldCollectionStatus");

                    b.Property<string>("FldComments")
                        .HasColumnType("text")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<long?>("FldCustomerVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldInvoiceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldInvoiceCode");

                    b.Property<string>("FldNotes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("fldNotes");

                    b.Property<string>("FldPaymentCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldPaymentCode");

                    b.Property<DateTime?>("FldPaymentCreateDate")
                        .HasColumnType("date")
                        .HasColumnName("fldPaymentCreateDate");

                    b.Property<DateTime>("FldPaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldPaymentDate");

                    b.Property<long?>("FldPaymentId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPaymentID");

                    b.Property<int>("FldPaymentType")
                        .HasColumnType("int")
                        .HasColumnName("fldPaymentType");

                    b.Property<long?>("FldRefInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRefInvoiceId");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<long?>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.HasKey("FldId");

                    b.ToTable("HtblPayment");
                });

            modelBuilder.Entity("IDCoreTest.Models.HtblStockDailyBalance", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double>("FldAdjust")
                        .HasColumnType("float")
                        .HasColumnName("fldAdjust");

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<double>("FldCloseBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCloseBalance");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("FldDamageBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldDamageBalance");

                    b.Property<DateTime>("FldDate")
                        .HasColumnType("date")
                        .HasColumnName("fldDate");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<double>("FldInitialBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldInitialBalance");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<double>("FldLoadBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldLoadBalance");

                    b.Property<double>("FldLoadUnPack")
                        .HasColumnType("float")
                        .HasColumnName("fldLoadUnPack");

                    b.Property<double>("FldOfferBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldOfferBalance");

                    b.Property<long>("FldOrginialId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldOrginialId");

                    b.Property<DateTime>("FldOriginalCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldOriginalCreateDate");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double>("FldResellBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldResellBalance");

                    b.Property<double>("FldSalesBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldSalesBalance");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<double>("FldStartBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldStartBalance");

                    b.Property<long>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockID");

                    b.Property<double>("FldTransferInBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldTransferInBalance");

                    b.Property<double>("FldTransferOutBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldTransferOutBalance");

                    b.Property<double>("FldUnLoad")
                        .HasColumnType("float")
                        .HasColumnName("fldUnLoad");

                    b.Property<double>("FldUnPack")
                        .HasColumnType("float")
                        .HasColumnName("fldUnPack");

                    b.HasKey("FldId");

                    b.ToTable("HtblStockDailyBalance");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblActivity", b =>
                {
                    b.Property<long>("FldId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('A-')");

                    b.Property<int>("FldDisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder");

                    b.Property<string>("FldGooglePlaceType")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldGooglePlaceType");

                    b.Property<string>("FldIcon")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldIcon");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldTranslatedName");

                    b.HasKey("FldId");

                    b.HasIndex(new[] { "FldName" }, "IX_tblActivity")
                        .IsUnique();

                    b.HasIndex(new[] { "FldCode" }, "IX_tblActivity_Code")
                        .IsUnique();

                    b.ToTable("tblActivity");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblAdminArea", b =>
                {
                    b.Property<long>("FldAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldAreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldAreaId"));

                    b.Property<double?>("FldCenterX")
                        .HasColumnType("float")
                        .HasColumnName("fldCenter_x");

                    b.Property<double?>("FldCenterY")
                        .HasColumnType("float")
                        .HasColumnName("fldCenter_y");

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<int>("FldDisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<bool?>("FldIsVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsVisible")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldParentAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldParentArea_ID");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .HasColumnType("int")
                        .HasColumnName("fldType");

                    b.Property<double>("FldZoomLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldZoomLevel")
                        .HasDefaultValueSql("((8))");

                    b.HasKey("FldAreaId")
                        .HasName("PK__tblAdminArea");

                    b.ToTable("tblAdminArea");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblAppEvent", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldEventEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEventEndTime");

                    b.Property<DateTime>("FldEventTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEventTime");

                    b.Property<int>("FldEventType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldEventType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceId");

                    b.Property<double?>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<double?>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<long?>("FldPaymentId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPaymentId");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<long>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanId");

                    b.Property<long>("FldUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserId");

                    b.HasKey("FldId")
                        .HasName("PK_tblEvent");

                    b.ToTable("tblAppEvent");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblAppPhoto", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldAssetId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAssetId");

                    b.Property<long?>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<long?>("FldEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldEmployeeId");

                    b.Property<long?>("FldExpenseId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldExpenseId");

                    b.Property<int>("FldFileType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldFileType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceId");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<double?>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<double?>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldOrderId");

                    b.Property<long?>("FldPaymentId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPaymentId");

                    b.Property<string>("FldPhotoUrl")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldPhotoUrl");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<long?>("FldPromotionOfferId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPromotionOfferId");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldVanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldVanId");

                    b.Property<long?>("FldVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldVisitId");

                    b.HasKey("FldId")
                        .HasName("PK_tblVisitPhoto");

                    b.ToTable("tblAppPhoto");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblAsset", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<long?>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<double>("FldCost")
                        .HasColumnType("float")
                        .HasColumnName("fldCost");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldInstallationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldInstallationDate");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastInspectionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastInspectionDate");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<double?>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<int>("FldStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldStatus");

                    b.Property<int?>("FldType")
                        .HasColumnType("int")
                        .HasColumnName("fldType");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblAsset");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblBankAccount", b =>
                {
                    b.Property<int>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FldId"));

                    b.Property<string>("FldAccountName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldAccountName");

                    b.Property<string>("FldAccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldAccountNumber");

                    b.Property<string>("FldBankAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldBankAddress");

                    b.Property<string>("FldBankName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldBankName");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldIban")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIBAN");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldReceiptMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldReceiptMethod");

                    b.Property<int?>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblBankAccount");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblBatch", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblBatch");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblBranch", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldAddress");

                    b.Property<string>("FldBankAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldBankAccount");

                    b.Property<string>("FldCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('B-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<string>("FldEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldEmail");

                    b.Property<int>("FldIdmlicenses")
                        .HasColumnType("int")
                        .HasColumnName("fldIDMLicenses");

                    b.Property<int>("FldIdvlicenses")
                        .HasColumnType("int")
                        .HasColumnName("fldIDVLicenses");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationTransactionTypeReturnCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationTransactionTypeReturnCode");

                    b.Property<string>("FldIntegrationTransactionTypeSalesCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationTransactionTypeSalesCode");

                    b.Property<string>("FldInvoiceReportTemplate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldInvoiceReportTemplate");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldJurisdiction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction")
                        .HasDefaultValueSql("('NA')");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldLicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLicenseNumber");

                    b.Property<string>("FldManager")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldManager");

                    b.Property<string>("FldMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobile");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldOrderReportTemplate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldOrderReportTemplate");

                    b.Property<long?>("FldParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldParentId");

                    b.Property<string>("FldTaxRegisterationNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("fldTaxRegisterationNumber");

                    b.Property<string>("FldTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldTelephone");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((2))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldParentId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblBranch")
                        .IsUnique()
                        .HasFilter("[fldCode] IS NOT NULL");

                    b.ToTable("tblBranch");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCategory", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('C-')");

                    b.Property<string>("FldCoverPhoto")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldCoverPhoto");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldDescription");

                    b.Property<int>("FldDisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<int>("FldLevel")
                        .HasColumnType("int")
                        .HasColumnName("fldLevel");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldParentId");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.HasKey("FldId")
                        .HasName("PK_tblProductCategory");

                    b.HasIndex(new[] { "FldCode", "FldType" }, "IX_tblCategory")
                        .IsUnique()
                        .HasFilter("[fldCode] IS NOT NULL");

                    b.ToTable("tblCategory");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCompanyInfo", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fldAddress");

                    b.Property<string>("FldBaseUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fldBaseUrl");

                    b.Property<int>("FldConfigVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldConfigVersion")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldContactName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldContactName");

                    b.Property<long?>("FldCountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCountryId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldEmail");

                    b.Property<string>("FldFax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldFax");

                    b.Property<int>("FldIdmlicenses")
                        .HasColumnType("int")
                        .HasColumnName("fldIDMLicenses");

                    b.Property<int>("FldIdvlicenses")
                        .HasColumnType("int")
                        .HasColumnName("fldIDVLicenses");

                    b.Property<string>("FldIntegrationPassword")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldIntegrationPassword");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationUsername")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldIntegrationUsername");

                    b.Property<string>("FldIntegrationkey")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldIntegrationkey");

                    b.Property<string>("FldInvoiceReportTemplate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldInvoiceReportTemplate");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldJurisdiction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction")
                        .HasDefaultValueSql("('NA')");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<DateTime?>("FldLicenseExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLicenseExpiryDate");

                    b.Property<string>("FldLicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLicenseNumber");

                    b.Property<string>("FldLogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fldLogoUrl");

                    b.Property<string>("FldMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobile");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldOrderReportTemplate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldOrderReportTemplate");

                    b.Property<string>("FldRegistrationCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldRegistrationCode");

                    b.Property<DateTime?>("FldRegistrationEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldRegistrationEndDate");

                    b.Property<DateTime?>("FldRegistrationStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldRegistrationStartDate");

                    b.Property<double>("FldTaxPercentage")
                        .HasColumnType("float")
                        .HasColumnName("fldTaxPercentage");

                    b.Property<string>("FldTaxRegisterationNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("fldTaxRegisterationNumber");

                    b.Property<string>("FldTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTelephone");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((2))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<string>("FldWebsite")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldWebsite");

                    b.HasKey("FldId");

                    b.ToTable("tblCompanyInfo");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblContact", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldAddress");

                    b.Property<DateTime?>("FldBirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldBirthDate");

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<string>("FldContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldContactEmail");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserId");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldDepartment");

                    b.Property<int>("FldGender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldGender")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldHasAccessPortal")
                        .HasColumnType("bit")
                        .HasColumnName("fldHasAccessPortal");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLastName");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobile");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldPortalPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPortalPassword");

                    b.Property<string>("FldPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPosition");

                    b.Property<string>("FldTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTelephone");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblContact");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCurrency", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<bool>("FldIsMainCurrency")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsMainCurrency");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldName");

                    b.Property<int>("FldPlaces")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPlaces")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fldSymbol");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId")
                        .HasName("PK_tblCurrency_1");

                    b.HasIndex(new[] { "FldSymbol" }, "IX_tblCurrency")
                        .IsUnique();

                    b.ToTable("tblCurrency");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCurrentLocation", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("FldLat")
                        .HasColumnType("float")
                        .HasColumnName("fldLat");

                    b.Property<double>("FldLon")
                        .HasColumnType("float")
                        .HasColumnName("fldLon");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<DateTime>("FldTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldTime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FldId");

                    b.ToTable("tblCurrentLocation");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomer", b =>
                {
                    b.Property<long>("FldCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldCustomerId"));

                    b.Property<long?>("FldAccessChannel")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAccessChannel");

                    b.Property<int>("FldAccountStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldAccountStatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<long>("FldActivityId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldActivityID");

                    b.Property<string>("FldAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldAddress");

                    b.Property<long>("FldAdminAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAdminAreaID");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<long>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldCnic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCnic");

                    b.Property<string>("FldComments")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldComments");

                    b.Property<string>("FldContactPerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldContactPerson");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateEmployeeID");

                    b.Property<int>("FldCreditCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldCreditCategory")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("FldCreditDays")
                        .HasColumnType("int")
                        .HasColumnName("fldCreditDays");

                    b.Property<int>("FldCreditLimit")
                        .HasColumnType("int")
                        .HasColumnName("fldCreditLimit");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldCurrentBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCurrentBalance");

                    b.Property<string>("FldCustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldCustomerCode");

                    b.Property<int>("FldCustomerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldCustomerType")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldDefaultDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDefaultDiscount");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldEmail");

                    b.Property<string>("FldFax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldFax");

                    b.Property<string>("FldGroup")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldGroup");

                    b.Property<double>("FldInitialBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldInitialBalance");

                    b.Property<string>("FldIntegrationAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationAccountId");

                    b.Property<string>("FldIntegrationAddressId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationAddressId");

                    b.Property<string>("FldIntegrationBillSiteId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationBillSiteId");

                    b.Property<string>("FldIntegrationPartyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationPartyId");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationShipSiteId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationShipSiteId");

                    b.Property<string>("FldIntegrationSiteAddressNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationSiteAddressNumber");

                    b.Property<string>("FldIntegrationStatusMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldIntegrationStatusMessage");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsConsignment")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsConsignment");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<bool>("FldIsGroup")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsGroup");

                    b.Property<bool?>("FldIsVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsVisible")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldLastCreditInvoiceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastCreditInvoiceDate");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<DateTime?>("FldLastVisitDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastVisitDate");

                    b.Property<int?>("FldLastVisitResult")
                        .HasColumnType("int")
                        .HasColumnName("fldLastVisitResult");

                    b.Property<double?>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<DateTime?>("FldLicenseExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLicenseExpiryDate");

                    b.Property<string>("FldLicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLicenseNumber");

                    b.Property<double?>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<double>("FldMaxDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxDiscount");

                    b.Property<string>("FldMobilePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobilePhone");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldNationalNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldNationalNumber");

                    b.Property<string>("FldNtn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldNtn");

                    b.Property<string>("FldOtherTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldOtherTelephone");

                    b.Property<int>("FldPayTerms")
                        .HasColumnType("int")
                        .HasColumnName("fldPayTerms");

                    b.Property<string>("FldPlaceOfSupply")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply")
                        .HasDefaultValueSql("('NA')");

                    b.Property<string>("FldPobox")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("fldPOBox");

                    b.Property<long>("FldPriceBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<double>("FldServiceTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldServiceTime")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("FldShipToAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldShipToAddress");

                    b.Property<string>("FldShipToEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldShipToEmail");

                    b.Property<string>("FldShipToName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldShipToName");

                    b.Property<string>("FldShipToTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldShipToTel");

                    b.Property<string>("FldTelephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTelephone");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<string>("FldTrn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("fldTRN");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<string>("FldVisitDay")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("fldVisitDay")
                        .HasDefaultValueSql("((1111111))")
                        .IsFixedLength();

                    b.Property<string>("FldVisitWeek")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .HasColumnName("fldVisitWeek")
                        .HasDefaultValueSql("((11111))")
                        .IsFixedLength();

                    b.Property<string>("FldWebsite")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldWebsite");

                    b.Property<long>("FldWorkingAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldWorkingAreaID");

                    b.Property<string>("FldWorkingHours")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldWorkingHours");

                    b.Property<double>("FldZoomLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldZoomLevel")
                        .HasDefaultValueSql("((16))");

                    b.HasKey("FldCustomerId");

                    b.HasIndex("FldAdminAreaId");

                    b.HasIndex("FldCategoryId");

                    b.HasIndex("FldCurrencyId");

                    b.HasIndex("FldPriceBookId");

                    b.HasIndex("FldRouteId");

                    b.HasIndex("FldWorkingAreaId");

                    b.HasIndex(new[] { "FldCustomerCode" }, "IX_tblCustomerCode")
                        .IsUnique()
                        .HasFilter("[fldCustomerCode] IS NOT NULL");

                    b.ToTable("tblCustomer");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomerVisit", b =>
                {
                    b.Property<long>("FldCustomerVisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldCustomerVisitId"));

                    b.Property<double?>("FldArrivalLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldArrivalLatitude");

                    b.Property<double?>("FldArrivalLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldArrivalLongitude");

                    b.Property<DateTime>("FldArriveTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldArriveTime");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<double?>("FldDepartLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldDepartLatitude");

                    b.Property<double?>("FldDepartLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldDepartLongitude");

                    b.Property<DateTime>("FldDepartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDepartTime");

                    b.Property<double?>("FldDistanceDifference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldDistanceDifference")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("FldNoSalesReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldNoSalesReasonID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FldNotes")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldNotes");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<DateTime>("FldVisitDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fldVisitDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FldVisitType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldVisitType")
                        .HasDefaultValueSql("((-1))");

                    b.HasKey("FldCustomerVisitId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldNoSalesReasonId");

                    b.HasIndex("FldRouteId");

                    b.ToTable("tblCustomerVisit");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblEmployee", b =>
                {
                    b.Property<long>("FldEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldEmpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldEmpId"));

                    b.Property<string>("FldAddress")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldAddress");

                    b.Property<DateTime?>("FldBirthday")
                        .HasColumnType("datetime")
                        .HasColumnName("fldBirthday");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('E-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<DateTime?>("FldEmploymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEmploymentDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldLandLine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLandLine");

                    b.Property<string>("FldLastName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldLastName")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<DateTime?>("FldLicenseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLicenseDate");

                    b.Property<string>("FldLicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldLicenseNumber");

                    b.Property<long?>("FldManagerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldManagerID");

                    b.Property<string>("FldMobilePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldMobilePhone");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldNationalNumber")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldNationalNumber");

                    b.Property<string>("FldNationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldNationality");

                    b.Property<string>("FldNote")
                        .HasColumnType("text")
                        .HasColumnName("fldNote");

                    b.Property<string>("FldPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPosition");

                    b.Property<int?>("FldRole")
                        .HasColumnType("int")
                        .HasColumnName("fldRole");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<long?>("FldUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserId");

                    b.HasKey("FldEmpId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblEmployee")
                        .IsUnique()
                        .HasFilter("[fldCode] IS NOT NULL");

                    b.ToTable("tblEmployee");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblExpense", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double>("FldAmount")
                        .HasColumnType("float")
                        .HasColumnName("fldAmount");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<long>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldDescription");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FldExpenseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpenseDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long?>("FldPurchaseInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPurchaseInvoiceId");

                    b.Property<string>("FldReceiptPhoto")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldReceiptPhoto");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldCategoryId");

                    b.HasIndex("FldRouteId");

                    b.ToTable("tblExpense");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblInvoice", b =>
                {
                    b.Property<long>("FldInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldInvoiceId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserId");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldCustomerBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCustomerBalance");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<long>("FldCustomerVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    b.Property<string>("FldDeliveryTerms")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldDeliveryTerms");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<long?>("FldDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDriverId");

                    b.Property<DateTime?>("FldDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDueDate");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldExtraCharges")
                        .HasColumnType("float")
                        .HasColumnName("fldExtraCharges");

                    b.Property<int>("FldFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldFlag")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldFurtherTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldFurtherTaxValue");

                    b.Property<double>("FldGrandTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldGrandTotal");

                    b.Property<string>("FldGroupPaymentReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldGroupPaymentReference");

                    b.Property<string>("FldHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldHash");

                    b.Property<long?>("FldHelperId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldHelperId");

                    b.Property<string>("FldIntegrationOrderReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationOrderReference");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationStatusMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldIntegrationStatusMessage");

                    b.Property<string>("FldInvoiceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldInvoiceCode");

                    b.Property<int>("FldInvoiceCollectionStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldInvoiceCollectionStatus");

                    b.Property<DateTime>("FldInvoiceDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldInvoiceDateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FldInvoiceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldInvoiceType")
                        .HasDefaultValueSql("((11))");

                    b.Property<string>("FldJurisdiction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long?>("FldLastUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldLastUpdateUserId");

                    b.Property<string>("FldLponumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLPONumber");

                    b.Property<double>("FldNetTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldNetTotal");

                    b.Property<string>("FldPayTerms")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPayTerms");

                    b.Property<string>("FldPlaceOfSupply")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply");

                    b.Property<long>("FldPriceBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldPromotionOfferId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPromotionOfferId");

                    b.Property<string>("FldReceiverMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldReceiverMobile");

                    b.Property<string>("FldReceiverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldReceiverName");

                    b.Property<long?>("FldRefOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRefOrderID");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<long?>("FldSalesInvoiceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesInvoiceNumber");

                    b.Property<long>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<int?>("FldSequence")
                        .HasColumnType("int")
                        .HasColumnName("fldSequence");

                    b.Property<long?>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockId");

                    b.Property<double>("FldTotalCollection")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalCollection");

                    b.Property<double>("FldTotalSales")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalSales");

                    b.Property<string>("FldUuid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("fldUUID");

                    b.Property<double>("FldVatvalue")
                        .HasColumnType("float")
                        .HasColumnName("fldVATValue");

                    b.HasKey("FldInvoiceId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldCustomerVisitId");

                    b.HasIndex("FldRouteId");

                    b.HasIndex(new[] { "FldInvoiceCode" }, "IX_tblInvoice_mobile_code")
                        .IsUnique()
                        .HasFilter("[fldInvoiceCode] IS NOT NULL");

                    b.ToTable("tblInvoice", null, t =>
                        {
                            t.HasTrigger("InvoiceSequenceTrigger");
                        });
                });

            modelBuilder.Entity("IDCoreTest.Models.TblInvoiceLineItem", b =>
                {
                    b.Property<long>("FldInvoiceLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceLineItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldInvoiceLineItemId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<double>("FldFurtherTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldFurtherTaxValue");

                    b.Property<long>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<bool>("FldIsDamaged")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDamaged");

                    b.Property<string>("FldNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldNote");

                    b.Property<double>("FldOfferQty")
                        .HasColumnType("float")
                        .HasColumnName("fldOfferQty");

                    b.Property<double>("FldPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldPrice");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit")
                        .HasDefaultValueSql("('Cur')");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double>("FldQty")
                        .HasColumnType("float")
                        .HasColumnName("fldQty");

                    b.Property<double>("FldReturnQty")
                        .HasColumnType("float")
                        .HasColumnName("fldReturnQty");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<string>("FldTaxCategoryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldTaxCategoryCode")
                        .HasDefaultValueSql("('SR')");

                    b.Property<double>("FldTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldTaxValue");

                    b.Property<double>("FldValue")
                        .HasColumnType("float")
                        .HasColumnName("fldValue");

                    b.HasKey("FldInvoiceLineItemId");

                    b.HasIndex("FldInvoiceId");

                    b.HasIndex("FldProductId");

                    b.ToTable("tblInvoiceLineItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblJurisdictionPlaceOfSupply", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime?>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("FldId");

                    b.ToTable("tblJurisdictionPlaceOfSupply");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblNoSalesReason", b =>
                {
                    b.Property<long>("FldId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldDescription");

                    b.Property<int>("FldDisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId")
                        .HasName("PK_tblEvaluation");

                    b.ToTable("tblNoSalesReason");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOdometerReading", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("FldLatitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLatitude");

                    b.Property<double>("FldLongitude")
                        .HasColumnType("float")
                        .HasColumnName("fldLongitude");

                    b.Property<double>("FldOdometer")
                        .HasColumnType("float")
                        .HasColumnName("fldOdometer");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<int>("FldType")
                        .HasColumnType("int")
                        .HasColumnName("fldType");

                    b.HasKey("FldId");

                    b.ToTable("tblOdometerReading");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOrder", b =>
                {
                    b.Property<long>("FldOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldOrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldOrderId"));

                    b.Property<long?>("FldAssignedRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAssignedRouteID");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldComments");

                    b.Property<string>("FldCourierComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldCourierComments");

                    b.Property<string>("FldCourierName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldCourierName");

                    b.Property<string>("FldCourierNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCourierNumber");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserID");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldCustomerBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCustomerBalance");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<long>("FldCustomerVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<DateTime?>("FldDeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeliveryDate");

                    b.Property<int>("FldDeliveryTerms")
                        .HasColumnType("int")
                        .HasColumnName("fldDeliveryTerms");

                    b.Property<int>("FldDeliveryType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDeliveryType")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<long?>("FldDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDriverId");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldExtraCharges")
                        .HasColumnType("float")
                        .HasColumnName("fldExtraCharges");

                    b.Property<double>("FldFurtherTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldFurtherTaxValue");

                    b.Property<double>("FldGrandTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldGrandTotal");

                    b.Property<long?>("FldHelperId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldHelperId");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationStatusMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldIntegrationStatusMessage");

                    b.Property<long?>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldJurisdiction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldLponumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldLPONumber");

                    b.Property<double>("FldNetTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldNetTotal");

                    b.Property<string>("FldNotes")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldNotes");

                    b.Property<string>("FldOrderCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldOrderCode");

                    b.Property<DateTime?>("FldOrderDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldOrderDateTime");

                    b.Property<int>("FldOrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldOrderStatus");

                    b.Property<int?>("FldOrderType")
                        .HasColumnType("int")
                        .HasColumnName("fldOrderType");

                    b.Property<long?>("FldOwnerRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldOwnerRouteID");

                    b.Property<long?>("FldPackedById")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPackedById");

                    b.Property<string>("FldPackingComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldPackingComments");

                    b.Property<DateTime?>("FldPackingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldPackingDate");

                    b.Property<int>("FldPayTerms")
                        .HasColumnType("int")
                        .HasColumnName("fldPayTerms");

                    b.Property<string>("FldPayTermsDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldPayTermsDesc");

                    b.Property<string>("FldPlaceOfSupply")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply");

                    b.Property<DateTime?>("FldPlannedDeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldPlannedDeliveryDate");

                    b.Property<long?>("FldPromotionOfferId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPromotionOfferId");

                    b.Property<string>("FldReceiverMobile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldReceiverMobile");

                    b.Property<string>("FldReceiverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldReceiverName");

                    b.Property<long?>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<long?>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockId");

                    b.Property<double>("FldTotalSales")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalSales");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double>("FldVatvalue")
                        .HasColumnType("float")
                        .HasColumnName("fldVATValue");

                    b.HasKey("FldOrderId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldOwnerRouteId");

                    b.HasIndex(new[] { "FldOrderCode" }, "IX_tblOrder_MobileCode")
                        .IsUnique()
                        .HasFilter("[fldOrderCode] IS NOT NULL");

                    b.ToTable("tblOrder");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOrderLineItem", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<double>("FldFurtherTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldFurtherTaxValue");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldNote");

                    b.Property<double>("FldOfferQty")
                        .HasColumnType("float")
                        .HasColumnName("fldOfferQty");

                    b.Property<long>("FldOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldOrderID");

                    b.Property<double>("FldPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldPrice");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double>("FldSalesQty")
                        .HasColumnType("float")
                        .HasColumnName("fldSalesQty");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<string>("FldTaxCategoryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldTaxCategoryCode")
                        .HasDefaultValueSql("('SR')");

                    b.Property<double>("FldTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldTaxValue");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double>("FldValue")
                        .HasColumnType("float")
                        .HasColumnName("fldValue");

                    b.HasKey("FldId");

                    b.HasIndex("FldOrderId");

                    b.HasIndex("FldProductId");

                    b.ToTable("tblOrderLineItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPayment", b =>
                {
                    b.Property<long>("FldPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldPaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldPaymentId"));

                    b.Property<double>("FldAmount")
                        .HasColumnType("float")
                        .HasColumnName("fldAmount");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<DateTime?>("FldChequeDate")
                        .HasColumnType("date")
                        .HasColumnName("fldChequeDate");

                    b.Property<string>("FldChequeNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fldChequeNo");

                    b.Property<string>("FldChequePhotoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("fldChequePhotoUrl");

                    b.Property<DateTime?>("FldCollectionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldCollectionDate");

                    b.Property<int>("FldCollectionStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldCollectionStatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserID");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldCustomerBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCustomerBalance");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<long?>("FldCustomerVisitId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerVisitID");

                    b.Property<double?>("FldDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationStatusMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldIntegrationStatusMessage");

                    b.Property<string>("FldInvoiceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldInvoiceCode");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldNotes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("fldNotes");

                    b.Property<string>("FldPaymentCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldPaymentCode");

                    b.Property<DateTime>("FldPaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldPaymentDate");

                    b.Property<int>("FldPaymentType")
                        .HasColumnType("int")
                        .HasColumnName("fldPaymentType");

                    b.Property<string>("FldReceiptMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldReceiptMethod");

                    b.Property<long?>("FldRefInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRefInvoiceId");

                    b.Property<string>("FldRemmitanceBankAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldRemmitanceBankAccount");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<long?>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldPaymentId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldCustomerVisitId");

                    b.HasIndex("FldRouteId");

                    b.HasIndex(new[] { "FldPaymentCode" }, "IX_tblPayment_mobile_code")
                        .IsUnique()
                        .HasFilter("[fldPaymentCode] IS NOT NULL");

                    b.ToTable("tblPayment");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPlan", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fldDescription");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblPlan");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPlanItem", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long>("FldPlanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPlanId");

                    b.Property<int>("FldSequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldSequence")
                        .HasDefaultValueSql("((1))");

                    b.Property<TimeSpan?>("FldTimeWindowEnd")
                        .HasColumnType("time")
                        .HasColumnName("fldTimeWindowEnd");

                    b.Property<TimeSpan?>("FldTimeWindowStart")
                        .HasColumnType("time")
                        .HasColumnName("fldTimeWindowStart");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldPlanId");

                    b.ToTable("tblPlanItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPriceBook", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDefault");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblPriceBook");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPriceBookEntry", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldFlatFee")
                        .HasColumnType("float")
                        .HasColumnName("fldFlatFee");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double>("FldMaxQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldMaxQuantity")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldMinQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldMinQuantity")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldPrice");

                    b.Property<long>("FldPriceBookId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId");

                    b.Property<int>("FldPricingModel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPricingModel")
                        .HasDefaultValueSql("((1))");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit");

                    b.Property<int?>("FldTier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldTier")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldPriceBookId");

                    b.HasIndex("FldProductId");

                    b.HasIndex(new[] { "FldCurrencyId", "FldPriceBookId", "FldProductId", "FldProductUnit", "FldTier", "FldIsDeleted" }, "IX_tblPriceBookEntry")
                        .IsUnique()
                        .HasFilter("[fldTier] IS NOT NULL");

                    b.ToTable("tblPriceBookEntry");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPrivilege", b =>
                {
                    b.Property<long>("FldPrivilegeId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPrivilegeID");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("fldDescription");

                    b.Property<int?>("FldGroupId")
                        .HasColumnType("int")
                        .HasColumnName("fldGroupId");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldTdescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("fldTDescription");

                    b.Property<string>("FldTname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldTName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("FldPrivilegeId")
                        .HasName("PK_tblPrivilages");

                    b.ToTable("tblPrivilege");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProduct", b =>
                {
                    b.Property<long>("FldProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldProdID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldProdId"));

                    b.Property<bool>("FldApplyFurtherTax")
                        .HasColumnType("bit")
                        .HasColumnName("fldApplyFurtherTax");

                    b.Property<bool?>("FldApplyTax")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldApplyTax")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldBarcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldBarcode");

                    b.Property<string>("FldBaseUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldBaseUnit");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<long>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryID");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<string>("FldCompany")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldCompany");

                    b.Property<double>("FldCostPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldCostPrice");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldDescription");

                    b.Property<int>("FldDisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("FldDisplayUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldDisplayUnit");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("FldIsBatchEnabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsBatchEnabled")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldMinStockAlert")
                        .HasColumnType("float")
                        .HasColumnName("fldMinStockAlert");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldName");

                    b.Property<int>("FldPlaces")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPlaces")
                        .HasDefaultValueSql("((2))");

                    b.Property<int>("FldSalesType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldSalesType")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("FldShelfLifeDays")
                        .HasColumnType("int")
                        .HasColumnName("fldShelfLifeDays");

                    b.Property<long?>("FldSubCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSubCategoryId");

                    b.Property<string>("FldTag")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldTag");

                    b.Property<double>("FldTax")
                        .HasColumnType("float")
                        .HasColumnName("fldTax");

                    b.Property<string>("FldTaxCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTaxCategory");

                    b.Property<string>("FldTaxCategoryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldTaxCategoryCode")
                        .HasDefaultValueSql("('SR')");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldProdId");

                    b.HasIndex("FldCategoryId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblProductCode")
                        .IsUnique();

                    b.ToTable("tblProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProductPackage", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldBarcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBarcode");

                    b.Property<double>("FldConversionQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldConversionQty")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldCostPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldCostPrice");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldMinStockAlert")
                        .HasColumnType("float")
                        .HasColumnName("fldMinStockAlert");

                    b.Property<int>("FldPlaces")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPlaces")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("FldProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldProductCode");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit");

                    b.Property<string>("FldProductUnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldProductUnitCode");

                    b.Property<double?>("FldUnitVolume")
                        .HasColumnType("float")
                        .HasColumnName("fldUnitVolume");

                    b.Property<double?>("FldUnitWeight")
                        .HasColumnType("float")
                        .HasColumnName("fldUnitWeight");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex(new[] { "FldProductId", "FldProductUnit" }, "IX_tblProductPackage")
                        .IsUnique();

                    b.ToTable("tblProductPackage");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProductUnit", b =>
                {
                    b.Property<string>("FldName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('U-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldDescription");

                    b.Property<int>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FldId"));

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldName")
                        .HasName("PK_tblProductUnit_1");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblProductUnit")
                        .IsUnique();

                    b.HasIndex(new[] { "FldName" }, "IX_tblProductUnit_1")
                        .IsUnique();

                    b.ToTable("tblProductUnit");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPromotionLineItem", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<int>("FldDiscountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDiscountType")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double>("FldMaxQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldMaxQty")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("FldMaxSalesValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxSalesValue");

                    b.Property<double>("FldMinQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldMinQty")
                        .HasDefaultValueSql("((1))");

                    b.Property<double?>("FldMinSalesValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMinSalesValue");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldProductUnit")
                        .HasDefaultValueSql("('')");

                    b.Property<long>("FldPromotionId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPromotionID");

                    b.Property<double>("FldQty")
                        .HasColumnType("float")
                        .HasColumnName("fldQty");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldProductId");

                    b.HasIndex("FldPromotionId");

                    b.ToTable("tblPromotionLineItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPromotionOffer", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double>("FldAvailableQuantity")
                        .HasColumnType("float")
                        .HasColumnName("fldAvailableQuantity");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<long?>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<string>("FldCustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldCustomerId");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<int>("FldDiscountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDiscountType")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEndDate");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldMaxQuantity")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxQuantity");

                    b.Property<double?>("FldMaxSalesQty")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxSalesQty");

                    b.Property<double>("FldMaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxValue");

                    b.Property<double?>("FldMinSalesQty")
                        .HasColumnType("float")
                        .HasColumnName("fldMinSalesQty");

                    b.Property<double>("FldMinValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMinValue");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldPriceBookId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPriceBookId");

                    b.Property<int>("FldPriority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPriority")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<DateTime>("FldStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldStartDate");

                    b.Property<int>("FldStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldStatus");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<long?>("FldWorkingAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldWorkingAreaId");

                    b.HasKey("FldId");

                    b.ToTable("tblPromotionOffer");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPurchaseInvoice", b =>
                {
                    b.Property<long>("FldInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldInvoiceId"));

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldGrandTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldGrandTotal");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldInvoiceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldInvoiceCode");

                    b.Property<DateTime>("FldInvoiceDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldInvoiceDateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FldInvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldInvoiceStatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double>("FldNetTotal")
                        .HasColumnType("float")
                        .HasColumnName("fldNetTotal");

                    b.Property<double>("FldPaidAmount")
                        .HasColumnType("float")
                        .HasColumnName("fldPaidAmount");

                    b.Property<int>("FldPayStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldPayStatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldTotalCollection")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalCollection");

                    b.Property<double>("FldTotalSales")
                        .HasColumnType("float")
                        .HasColumnName("fldTotalSales");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double>("FldVatvalue")
                        .HasColumnType("float")
                        .HasColumnName("fldVATValue");

                    b.Property<long>("FldVendorId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldVendorID");

                    b.Property<long?>("FldWarehouseId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldWarehouseId");

                    b.HasKey("FldInvoiceId");

                    b.HasIndex("FldVendorId");

                    b.ToTable("tblPurchaseInvoice");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPurchaseInvoiceLineItem", b =>
                {
                    b.Property<long>("FldInvoiceLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceLineItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldInvoiceLineItemId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldDiscount");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<long>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double>("FldOfferQty")
                        .HasColumnType("float")
                        .HasColumnName("fldOfferQty");

                    b.Property<double>("FldPrice")
                        .HasColumnType("float")
                        .HasColumnName("fldPrice");

                    b.Property<long>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit")
                        .HasDefaultValueSql("('Cur')");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double>("FldQty")
                        .HasColumnType("float")
                        .HasColumnName("fldQty");

                    b.Property<double>("FldReturnQty")
                        .HasColumnType("float")
                        .HasColumnName("fldReturnQty");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<string>("FldTaxCategoryCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldTaxCategoryCode")
                        .HasDefaultValueSql("('SR')");

                    b.Property<double>("FldTaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldTaxValue");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double>("FldValue")
                        .HasColumnType("float")
                        .HasColumnName("fldValue");

                    b.HasKey("FldInvoiceLineItemId")
                        .HasName("PK_tblPInvoiceLineItem");

                    b.HasIndex("FldInvoiceId");

                    b.HasIndex("FldProductId");

                    b.ToTable("tblPurchaseInvoiceLineItem");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRequest", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<string>("FldComments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserId");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerId");

                    b.Property<string>("FldDeleteDate")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("fldDeleteDate")
                        .IsFixedLength();

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<long?>("FldEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldEmployeeId");

                    b.Property<bool?>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<int>("FldRequestType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldRequestType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<int>("FldStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldStatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("FldSubject")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldSubject");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex("FldCategoryId");

                    b.HasIndex("FldCustomerId");

                    b.HasIndex("FldRouteId");

                    b.ToTable("tblRequest");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRoute", b =>
                {
                    b.Property<long>("FldRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldRouteId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<double>("FldCashBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCashBalance");

                    b.Property<string>("FldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("FldCreditLimit")
                        .HasColumnType("float")
                        .HasColumnName("fldCreditLimit");

                    b.Property<long?>("FldCurrencyId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId");

                    b.Property<double>("FldCurrentBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldCurrentBalance");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<long?>("FldDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDriverId");

                    b.Property<long?>("FldHelperId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldHelperId");

                    b.Property<double>("FldInitialBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldInitialBalance");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<string>("FldJurisdiction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction")
                        .HasDefaultValueSql("('NA')");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double>("FldMaxDiscount")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxDiscount");

                    b.Property<long?>("FldPlanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPlanId");

                    b.Property<double>("FldReturnBalance")
                        .HasColumnType("float")
                        .HasColumnName("fldReturnBalance");

                    b.Property<string>("FldRouteColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldRouteColor");

                    b.Property<string>("FldRouteName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fldRouteName");

                    b.Property<int>("FldRouteType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldRouteType")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("FldSalesTarget")
                        .HasColumnType("float")
                        .HasColumnName("fldSalesTarget");

                    b.Property<long?>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<long?>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockID");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<long?>("FldVanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldVanID");

                    b.Property<long?>("FldWarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldWarehouseId")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("FldRouteId");

                    b.HasIndex("FldSalesmanId");

                    b.HasIndex("FldStockId");

                    b.HasIndex("FldVanId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblRouteCode")
                        .IsUnique()
                        .HasFilter("[fldCode] IS NOT NULL");

                    b.ToTable("tblRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRoutePlan", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<DateTime?>("FldEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEndDate");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long>("FldPlanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPlanId");

                    b.Property<int>("FldRecurrence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldRecurrence")
                        .HasDefaultValueSql("((1))");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<DateTime?>("FldStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldStartDate");

                    b.Property<int>("FldType")
                        .HasColumnType("int")
                        .HasColumnName("fldType");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<string>("FldVisitDayPattern")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .HasColumnName("fldVisitDayPattern")
                        .HasDefaultValueSql("((1111111))")
                        .IsFixedLength();

                    b.Property<string>("FldVisitMonthDaysPattern")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(31)
                        .HasColumnType("nchar(31)")
                        .HasColumnName("fldVisitMonthDaysPattern")
                        .HasDefaultValueSql("((11111))")
                        .IsFixedLength();

                    b.Property<string>("FldVisitMonthPattern")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .HasColumnName("fldVisitMonthPattern")
                        .HasDefaultValueSql("((11111))")
                        .IsFixedLength();

                    b.Property<string>("FldVisitWeekPattern")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .HasColumnName("fldVisitWeekPattern")
                        .HasDefaultValueSql("((11111))")
                        .IsFixedLength();

                    b.HasKey("FldId");

                    b.HasIndex("FldPlanId");

                    b.HasIndex("FldRouteId");

                    b.ToTable("tblRoutePlan");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRouteProductCategory", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCategoryId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserId");

                    b.Property<int>("FldDisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldDisplayOrder")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductId");

                    b.Property<long>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.ToTable("tblRouteProductCategory");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblSalesTarget", b =>
                {
                    b.Property<long>("FldSalesTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesTargetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldSalesTargetId"));

                    b.Property<double>("FldAmount")
                        .HasColumnType("float")
                        .HasColumnName("fldAmount");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("FldCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldCurrencyId")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldCustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCustomerID");

                    b.Property<string>("FldDescription")
                        .HasColumnType("text")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldEndDate")
                        .HasColumnType("date")
                        .HasColumnName("fldEndDate");

                    b.Property<double>("FldExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldExchangeRate")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<long?>("FldProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProductID");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<long?>("FldSalesmanId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSalesmanID");

                    b.Property<DateTime>("FldStartDate")
                        .HasColumnType("date")
                        .HasColumnName("fldStartDate");

                    b.Property<int>("FldType")
                        .HasColumnType("int")
                        .HasColumnName("fldType");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldSalesTargetId");

                    b.ToTable("tblSalesTarget");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblSession", b =>
                {
                    b.Property<long>("FldSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldSessionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldSessionId"));

                    b.Property<string>("FldClientBrowser")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fldClientBrowser");

                    b.Property<string>("FldClientIp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fldClientIP");

                    b.Property<string>("FldComments")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldComments");

                    b.Property<long?>("FldCreateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldCreateUserId");

                    b.Property<DateTime?>("FldEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fldEndTime");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<DateTime>("FldSessionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fldSessionDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FldStartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldStartTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short?>("FldStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("fldStatus")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("FldTrrUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldTrrUserId");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<long?>("FldUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserID");

                    b.Property<string>("FldUserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fldUserName");

                    b.HasKey("FldSessionId");

                    b.ToTable("tblSession");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStock", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldCode");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteId");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))")
                        .HasComment("1 warehouse - 2 route stock");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.HasKey("FldId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblStock")
                        .IsUnique()
                        .HasFilter("[fldCode] IS NOT NULL");

                    b.ToTable("tblStock");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStockDailyBalance", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double>("Adjust")
                        .HasColumnType("float")
                        .HasColumnName("adjust");

                    b.Property<double>("CloseBalance")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("((((((((((([InitialBalance]+[LoadBalance])-[DamageBalance])+[adjust])+[ResellBalance])+[LoadUnPack])+[TransferInBalance])-[TransferOutBalance])-[SalesBalance])-[OfferBalance])-[UnPack])-[UnLoad])", false);

                    b.Property<double>("DamageBalance")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<double>("InitialBalance")
                        .HasColumnType("float");

                    b.Property<double>("LoadBalance")
                        .HasColumnType("float");

                    b.Property<double>("LoadUnPack")
                        .HasColumnType("float");

                    b.Property<double>("OfferBalance")
                        .HasColumnType("float");

                    b.Property<long>("ProdId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProdID");

                    b.Property<string>("ProductUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("ResellBalance")
                        .HasColumnType("float");

                    b.Property<double>("SalesBalance")
                        .HasColumnType("float");

                    b.Property<double>("StartBalance")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("([InitialBalance]+[LoadBalance])", false);

                    b.Property<long>("StockId")
                        .HasColumnType("bigint")
                        .HasColumnName("StockID");

                    b.Property<double>("TransferInBalance")
                        .HasColumnType("float");

                    b.Property<double>("TransferOutBalance")
                        .HasColumnType("float");

                    b.Property<double>("UnLoad")
                        .HasColumnType("float");

                    b.Property<double>("UnPack")
                        .HasColumnType("float");

                    b.HasKey("FldId");

                    b.HasIndex("StockId");

                    b.HasIndex(new[] { "ProdId", "Date", "StockId", "FldBatchId" }, "IX_tblStockDailyBalance")
                        .IsUnique()
                        .HasFilter("[fldBatchId] IS NOT NULL");

                    b.ToTable("tblStockDailyBalance");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStockDailyLoadBalance", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<double>("FldActualLoadQty")
                        .HasColumnType("float")
                        .HasColumnName("fldActualLoadQty");

                    b.Property<DateTime?>("FldAppliedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldAppliedDate");

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<string>("FldComments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime>("FldDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<string>("FldIntegrationStatusMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldIntegrationStatusMessage");

                    b.Property<bool>("FldIsApplied")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsApplied");

                    b.Property<double>("FldLoadQty")
                        .HasColumnType("float")
                        .HasColumnName("fldLoadQty");

                    b.Property<long?>("FldOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldOrderId");

                    b.Property<long>("FldProdId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProdID");

                    b.Property<string>("FldProductUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<string>("FldRequestNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldRequestNumber");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<long>("FldStockId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldStockID");

                    b.Property<int>("FldType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldType")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("FldWarehouseId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldWarehouseId");

                    b.HasKey("FldId")
                        .HasName("PK_StockDailyLoadBalance");

                    b.ToTable("tblStockDailyLoadBalance");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStockTransaction", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldBatchId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldBatchId");

                    b.Property<double?>("FldBeforeQty")
                        .HasColumnType("float")
                        .HasColumnName("fldBeforeQty");

                    b.Property<string>("FldComments")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldComments");

                    b.Property<DateTime?>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("FldDestinationId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDestinationID");

                    b.Property<DateTime?>("FldExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpiryDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<long?>("FldInvoiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldInvoiceID");

                    b.Property<long?>("FldProdId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldProdID");

                    b.Property<string>("FldProductUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fldProductUnit");

                    b.Property<DateTime?>("FldProductionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldProductionDate");

                    b.Property<double>("FldQty")
                        .HasColumnType("float")
                        .HasColumnName("fldQty");

                    b.Property<string>("FldSerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldSerialNumber");

                    b.Property<long?>("FldSourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldSourceID");

                    b.Property<DateTime>("FldTransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldTransactionDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FldTransactionType")
                        .HasColumnType("int")
                        .HasColumnName("fldTransactionType");

                    b.Property<string>("FldType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldType");

                    b.Property<long?>("FldUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserId");

                    b.Property<string>("FldUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldUsername");

                    b.Property<long?>("FldlnvoiceLineItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldlnvoiceLineItemID");

                    b.Property<bool?>("IsDestinationCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSourceCustomer")
                        .HasColumnType("bit");

                    b.HasKey("FldId");

                    b.HasIndex("FldProdId");

                    b.ToTable("tblStockTransactions");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblSystemConfig", b =>
                {
                    b.Property<int>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FldId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldConfigKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldConfigKey");

                    b.Property<string>("FldConfigValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fldConfigValue");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldDescription");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<double?>("FldMaxValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMaxValue");

                    b.Property<double?>("FldMinValue")
                        .HasColumnType("float")
                        .HasColumnName("fldMinValue");

                    b.Property<double?>("FldStepValue")
                        .HasColumnType("float")
                        .HasColumnName("fldStepValue");

                    b.Property<string>("FldTranslatedDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldTranslatedDescription");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<int?>("FldValueType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fldValueType")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("FldId");

                    b.HasIndex(new[] { "FldBranchId", "FldConfigKey" }, "IX_tblSystemConfig")
                        .IsUnique()
                        .HasFilter("[fldBranchId] IS NOT NULL");

                    b.ToTable("tblSystemConfig");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblTaxMatrix", b =>
                {
                    b.Property<long>("FldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldId"));

                    b.Property<string>("FldCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fldCategory");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FldJurisdiction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldJurisdiction");

                    b.Property<string>("FldPlaceOfSupply")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPlaceOfSupply");

                    b.Property<string>("FldTaxCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("fldTaxCode");

                    b.Property<double>("FldValue")
                        .HasColumnType("float")
                        .HasColumnName("fldValue");

                    b.Property<string>("FldVoucherType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldVoucherType");

                    b.HasKey("FldId");

                    b.ToTable("tblTaxMatrix");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblUser", b =>
                {
                    b.Property<long>("FldUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldUserId"));

                    b.Property<string>("FldActivationKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldActivationKey");

                    b.Property<double?>("FldAllowedDistance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldAllowedDistance")
                        .HasDefaultValueSql("((-1))");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('U-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldDepartment");

                    b.Property<string>("FldEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldEmail");

                    b.Property<bool>("FldIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldPassword");

                    b.Property<string>("FldRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldRole");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<double>("FldSessionLifeTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldSessionLifeTime")
                        .HasDefaultValueSql("((24))");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<string>("FldUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldUserName");

                    b.Property<string>("FldUserType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fldUserType")
                        .HasDefaultValueSql("('IDV')");

                    b.HasKey("FldUserId")
                        .HasName("PK_tblUsers");

                    b.HasIndex(new[] { "FldUserName" }, "IX_tblUsername")
                        .IsUnique();

                    b.ToTable("tblUser");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblUserPrivilege", b =>
                {
                    b.Property<long>("FldUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUserId");

                    b.Property<long>("FldPrivilegeId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldPrivilegeId");

                    b.Property<DateTime>("FldCreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FldUserId", "FldPrivilegeId")
                        .HasName("PK_tblUserPrivilage");

                    b.HasIndex("FldPrivilegeId");

                    b.ToTable("tblUserPrivilege");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblVan", b =>
                {
                    b.Property<long>("FldVanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldVanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldVanId"));

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<string>("FldChassisNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldChassisNumber");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('V-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<string>("FldDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("fldDescription");

                    b.Property<long?>("FldDriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldDriverID");

                    b.Property<DateTime?>("FldExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldExpirationDate");

                    b.Property<string>("FldInsuranceCompany")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fldInsuranceCompany");

                    b.Property<DateTime?>("FldInsuranceExpriyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldInsuranceExpriyDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<int?>("FldModelYear")
                        .HasColumnType("int")
                        .HasColumnName("fldModelYear");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("fldName");

                    b.Property<string>("FldPlateNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fldPlateNumber");

                    b.Property<DateTime?>("FldPurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldPurchaseDate");

                    b.Property<DateTime?>("FldRegisterationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldRegisterationDate");

                    b.Property<string>("FldTrafficCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldTrafficCode");

                    b.Property<string>("FldType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldType");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double?>("FldVolume")
                        .HasColumnType("float")
                        .HasColumnName("fldVolume");

                    b.Property<double?>("FldWeight")
                        .HasColumnType("float")
                        .HasColumnName("fldWeight");

                    b.HasKey("FldVanId")
                        .HasName("PK_tblVehicle");

                    b.HasIndex("FldDriverId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblVan")
                        .IsUnique();

                    b.ToTable("tblVan");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblWorkingArea", b =>
                {
                    b.Property<long>("FldWorkingAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("fldWorkingAreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FldWorkingAreaId"));

                    b.Property<long>("FldAdminAreaId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldAdminAreaID");

                    b.Property<long?>("FldBranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldBranchId");

                    b.Property<double?>("FldCenterX")
                        .HasColumnType("float")
                        .HasColumnName("fldCenter_x");

                    b.Property<double?>("FldCenterY")
                        .HasColumnType("float")
                        .HasColumnName("fldCenter_y");

                    b.Property<string>("FldCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldCode")
                        .HasDefaultValueSql("('W-')");

                    b.Property<DateTime>("FldCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fldCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FldDeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldDeleteDate");

                    b.Property<DateTime?>("FldIntegrationPostDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldIntegrationPostDate");

                    b.Property<int?>("FldIntegrationPostStatus")
                        .HasColumnType("int")
                        .HasColumnName("fldIntegrationPostStatus");

                    b.Property<string>("FldIntegrationReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fldIntegrationReference");

                    b.Property<bool?>("FldIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("fldIsActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("FldIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fldIsDeleted");

                    b.Property<DateTime?>("FldLastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fldLastUpdateDate");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldName");

                    b.Property<long?>("FldRouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldRouteID");

                    b.Property<string>("FldTranslatedName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fldTranslatedName");

                    b.Property<long?>("FldUpdateUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("fldUpdateUserId");

                    b.Property<double>("FldZoomLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("fldZoomLevel")
                        .HasDefaultValueSql("((10))");

                    b.HasKey("FldWorkingAreaId")
                        .HasName("PK__TBLWORKI__D27FF6E4BD5AFE7C");

                    b.HasIndex("FldAdminAreaId");

                    b.HasIndex("FldRouteId");

                    b.HasIndex(new[] { "FldCode" }, "IX_tblWorkingArea")
                        .IsUnique();

                    b.ToTable("tblWorkingArea");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblBranch", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblBranch", "FldParent")
                        .WithMany("InverseFldParent")
                        .HasForeignKey("FldParentId")
                        .HasConstraintName("FK_tblBranch_tblBranch");

                    b.Navigation("FldParent");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomer", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblAdminArea", "FldAdminArea")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldAdminAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomer_tblAdminArea");

                    b.HasOne("IDCoreTest.Models.TblCategory", "FldCategory")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomer_tblCategory");

                    b.HasOne("IDCoreTest.Models.TblCurrency", "FldCurrency")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldCurrencyId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomer_tblCurrency");

                    b.HasOne("IDCoreTest.Models.TblPriceBook", "FldPriceBook")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldPriceBookId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomer_tblPriceBook");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldRouteId")
                        .HasConstraintName("FK_tblCustomer_tblRoute");

                    b.HasOne("IDCoreTest.Models.TblWorkingArea", "FldWorkingArea")
                        .WithMany("TblCustomers")
                        .HasForeignKey("FldWorkingAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomer_tblWorkingArea");

                    b.Navigation("FldAdminArea");

                    b.Navigation("FldCategory");

                    b.Navigation("FldCurrency");

                    b.Navigation("FldPriceBook");

                    b.Navigation("FldRoute");

                    b.Navigation("FldWorkingArea");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomerVisit", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblCustomerVisits")
                        .HasForeignKey("FldCustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomerVisit_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblNoSalesReason", "FldNoSalesReason")
                        .WithMany("TblCustomerVisits")
                        .HasForeignKey("FldNoSalesReasonId")
                        .HasConstraintName("FK_tblCustomerVisit_tblNoSalesReason");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblCustomerVisits")
                        .HasForeignKey("FldRouteId")
                        .IsRequired()
                        .HasConstraintName("FK_tblCustomerVisit_tblRoute");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldNoSalesReason");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblExpense", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCategory", "FldCategory")
                        .WithMany("TblExpenses")
                        .HasForeignKey("FldCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_tblExpense_tblCategory");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblExpenses")
                        .HasForeignKey("FldRouteId")
                        .HasConstraintName("FK_tblExpense_tblRoute");

                    b.Navigation("FldCategory");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblInvoice", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblInvoices")
                        .HasForeignKey("FldCustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_tblInvoice_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblCustomerVisit", "FldCustomerVisit")
                        .WithMany("TblInvoices")
                        .HasForeignKey("FldCustomerVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblInvoice_tblCustomerVisit");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblInvoices")
                        .HasForeignKey("FldRouteId")
                        .IsRequired()
                        .HasConstraintName("FK_tblInvoice_tblRoute");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldCustomerVisit");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblInvoiceLineItem", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblInvoice", "FldInvoice")
                        .WithMany("TblInvoiceLineItems")
                        .HasForeignKey("FldInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblInvoiceLineItem_tblInvoice");

                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblInvoiceLineItems")
                        .HasForeignKey("FldProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tblInvoiceLineItem_tblProduct");

                    b.Navigation("FldInvoice");

                    b.Navigation("FldProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOrder", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblOrders")
                        .HasForeignKey("FldCustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_tblOrder_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldOwnerRoute")
                        .WithMany("TblOrders")
                        .HasForeignKey("FldOwnerRouteId")
                        .HasConstraintName("FK_tblOrder_tblRoute");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldOwnerRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOrderLineItem", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblOrder", "FldOrder")
                        .WithMany("TblOrderLineItems")
                        .HasForeignKey("FldOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblOrderLineItem_tblOrder");

                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblOrderLineItems")
                        .HasForeignKey("FldProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tblOrderLineItem_tblProduct");

                    b.Navigation("FldOrder");

                    b.Navigation("FldProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPayment", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblPayments")
                        .HasForeignKey("FldCustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPayment_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblCustomerVisit", "FldCustomerVisit")
                        .WithMany("TblPayments")
                        .HasForeignKey("FldCustomerVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblPayment_tblCustomerVisit");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblPayments")
                        .HasForeignKey("FldRouteId")
                        .HasConstraintName("FK_tblPayment_tblRoute");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldCustomerVisit");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPlanItem", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblPlanItems")
                        .HasForeignKey("FldCustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPlanItem_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblPlan", "FldPlan")
                        .WithMany("TblPlanItems")
                        .HasForeignKey("FldPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblPlanItem_tblPlan");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldPlan");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPriceBookEntry", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCurrency", "FldCurrency")
                        .WithMany("TblPriceBookEntries")
                        .HasForeignKey("FldCurrencyId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPriceBookEntry_tblCurrency");

                    b.HasOne("IDCoreTest.Models.TblPriceBook", "FldPriceBook")
                        .WithMany("TblPriceBookEntries")
                        .HasForeignKey("FldPriceBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblPriceBookEntry_tblPriceBook");

                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblPriceBookEntries")
                        .HasForeignKey("FldProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPriceBookEntry_tblProduct");

                    b.Navigation("FldCurrency");

                    b.Navigation("FldPriceBook");

                    b.Navigation("FldProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProduct", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCategory", "FldCategory")
                        .WithMany("TblProducts")
                        .HasForeignKey("FldCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_tblProduct_tblCategory");

                    b.Navigation("FldCategory");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProductPackage", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblProductPackages")
                        .HasForeignKey("FldProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblProductPackage_tblProduct");

                    b.Navigation("FldProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPromotionLineItem", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblPromotionLineItems")
                        .HasForeignKey("FldProductId")
                        .HasConstraintName("FK_tblProduct_tblPromotionLineItem");

                    b.HasOne("IDCoreTest.Models.TblPromotionOffer", "FldPromotion")
                        .WithMany("TblPromotionLineItems")
                        .HasForeignKey("FldPromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblPromotion_tblPromotionOffer");

                    b.Navigation("FldProduct");

                    b.Navigation("FldPromotion");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPurchaseInvoice", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCompanyInfo", "FldVendor")
                        .WithMany("TblPurchaseInvoices")
                        .HasForeignKey("FldVendorId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPInvoice_tblCompany");

                    b.Navigation("FldVendor");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPurchaseInvoiceLineItem", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblPurchaseInvoice", "FldInvoice")
                        .WithMany("TblPurchaseInvoiceLineItems")
                        .HasForeignKey("FldInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblPInvoiceLineItem_tblPInvoice");

                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProduct")
                        .WithMany("TblPurchaseInvoiceLineItems")
                        .HasForeignKey("FldProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tblPInvoiceLineItem_tblProduct");

                    b.Navigation("FldInvoice");

                    b.Navigation("FldProduct");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRequest", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblCategory", "FldCategory")
                        .WithMany("TblRequests")
                        .HasForeignKey("FldCategoryId")
                        .HasConstraintName("FK_tblRequest_tblCategory");

                    b.HasOne("IDCoreTest.Models.TblCustomer", "FldCustomer")
                        .WithMany("TblRequests")
                        .HasForeignKey("FldCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblRequest_tblCustomer");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblRequests")
                        .HasForeignKey("FldRouteId")
                        .HasConstraintName("FK_tblRequest_tblRoute");

                    b.Navigation("FldCategory");

                    b.Navigation("FldCustomer");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRoute", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblEmployee", "FldSalesman")
                        .WithMany("TblRoutes")
                        .HasForeignKey("FldSalesmanId")
                        .HasConstraintName("FK_tblRoute_tblEmployee");

                    b.HasOne("IDCoreTest.Models.TblStock", "FldStock")
                        .WithMany("TblRoutes")
                        .HasForeignKey("FldStockId")
                        .HasConstraintName("FK_tblRoute_tblStock");

                    b.HasOne("IDCoreTest.Models.TblVan", "FldVan")
                        .WithMany("TblRoutes")
                        .HasForeignKey("FldVanId")
                        .HasConstraintName("FK_tblRoute_tblVan");

                    b.Navigation("FldSalesman");

                    b.Navigation("FldStock");

                    b.Navigation("FldVan");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRoutePlan", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblPlan", "FldPlan")
                        .WithMany("TblRoutePlans")
                        .HasForeignKey("FldPlanId")
                        .IsRequired()
                        .HasConstraintName("FK_tblRoutePlan_tblPlan");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblRoutePlans")
                        .HasForeignKey("FldRouteId")
                        .IsRequired()
                        .HasConstraintName("FK_tblRoutePlan_tblRoute");

                    b.Navigation("FldPlan");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStockDailyBalance", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblProduct", "Prod")
                        .WithMany("TblStockDailyBalances")
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblStockDailyBalance_tblProduct");

                    b.HasOne("IDCoreTest.Models.TblStock", "Stock")
                        .WithMany("TblStockDailyBalances")
                        .HasForeignKey("StockId")
                        .IsRequired()
                        .HasConstraintName("FK_tblStockDailyBalance_tblStock");

                    b.Navigation("Prod");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStockTransaction", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblProduct", "FldProd")
                        .WithMany("TblStockTransactions")
                        .HasForeignKey("FldProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_tblStockTransactions_tblProduct");

                    b.Navigation("FldProd");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblUserPrivilege", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblPrivilege", "FldPrivilege")
                        .WithMany("TblUserPrivileges")
                        .HasForeignKey("FldPrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblUserPrivilege_tblPrivilege");

                    b.HasOne("IDCoreTest.Models.TblUser", "FldUser")
                        .WithMany("TblUserPrivileges")
                        .HasForeignKey("FldUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tblUserPrivilege_tblUser");

                    b.Navigation("FldPrivilege");

                    b.Navigation("FldUser");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblVan", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblEmployee", "FldDriver")
                        .WithMany("TblVans")
                        .HasForeignKey("FldDriverId")
                        .HasConstraintName("FK_tblVehicle_tblEmployee");

                    b.Navigation("FldDriver");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblWorkingArea", b =>
                {
                    b.HasOne("IDCoreTest.Models.TblAdminArea", "FldAdminArea")
                        .WithMany("TblWorkingAreas")
                        .HasForeignKey("FldAdminAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_tblWorkingArea_tblAdminArea");

                    b.HasOne("IDCoreTest.Models.TblRoute", "FldRoute")
                        .WithMany("TblWorkingAreas")
                        .HasForeignKey("FldRouteId")
                        .HasConstraintName("FK_tblWorkingArea_tblRoute");

                    b.Navigation("FldAdminArea");

                    b.Navigation("FldRoute");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblAdminArea", b =>
                {
                    b.Navigation("TblCustomers");

                    b.Navigation("TblWorkingAreas");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblBranch", b =>
                {
                    b.Navigation("InverseFldParent");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCategory", b =>
                {
                    b.Navigation("TblCustomers");

                    b.Navigation("TblExpenses");

                    b.Navigation("TblProducts");

                    b.Navigation("TblRequests");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCompanyInfo", b =>
                {
                    b.Navigation("TblPurchaseInvoices");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCurrency", b =>
                {
                    b.Navigation("TblCustomers");

                    b.Navigation("TblPriceBookEntries");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomer", b =>
                {
                    b.Navigation("TblCustomerVisits");

                    b.Navigation("TblInvoices");

                    b.Navigation("TblOrders");

                    b.Navigation("TblPayments");

                    b.Navigation("TblPlanItems");

                    b.Navigation("TblRequests");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblCustomerVisit", b =>
                {
                    b.Navigation("TblInvoices");

                    b.Navigation("TblPayments");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblEmployee", b =>
                {
                    b.Navigation("TblRoutes");

                    b.Navigation("TblVans");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblInvoice", b =>
                {
                    b.Navigation("TblInvoiceLineItems");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblNoSalesReason", b =>
                {
                    b.Navigation("TblCustomerVisits");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblOrder", b =>
                {
                    b.Navigation("TblOrderLineItems");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPlan", b =>
                {
                    b.Navigation("TblPlanItems");

                    b.Navigation("TblRoutePlans");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPriceBook", b =>
                {
                    b.Navigation("TblCustomers");

                    b.Navigation("TblPriceBookEntries");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPrivilege", b =>
                {
                    b.Navigation("TblUserPrivileges");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblProduct", b =>
                {
                    b.Navigation("TblInvoiceLineItems");

                    b.Navigation("TblOrderLineItems");

                    b.Navigation("TblPriceBookEntries");

                    b.Navigation("TblProductPackages");

                    b.Navigation("TblPromotionLineItems");

                    b.Navigation("TblPurchaseInvoiceLineItems");

                    b.Navigation("TblStockDailyBalances");

                    b.Navigation("TblStockTransactions");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPromotionOffer", b =>
                {
                    b.Navigation("TblPromotionLineItems");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblPurchaseInvoice", b =>
                {
                    b.Navigation("TblPurchaseInvoiceLineItems");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblRoute", b =>
                {
                    b.Navigation("TblCustomerVisits");

                    b.Navigation("TblCustomers");

                    b.Navigation("TblExpenses");

                    b.Navigation("TblInvoices");

                    b.Navigation("TblOrders");

                    b.Navigation("TblPayments");

                    b.Navigation("TblRequests");

                    b.Navigation("TblRoutePlans");

                    b.Navigation("TblWorkingAreas");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblStock", b =>
                {
                    b.Navigation("TblRoutes");

                    b.Navigation("TblStockDailyBalances");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblUser", b =>
                {
                    b.Navigation("TblUserPrivileges");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblVan", b =>
                {
                    b.Navigation("TblRoutes");
                });

            modelBuilder.Entity("IDCoreTest.Models.TblWorkingArea", b =>
                {
                    b.Navigation("TblCustomers");
                });
#pragma warning restore 612, 618
        }
    }
}
